// <auto-generated />
using System;
using Hoangnhhe171693.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hoangnhhe171693.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250410144654_FixStatusCer")]
    partial class FixStatusCer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Hoangnhhe171693.Models.Certificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdTinh")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdTinh");

                    b.ToTable("Certificate", (string)null);
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActiveCertificateCount")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("Dob")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Ethnic")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int>("IdHuyen")
                        .HasColumnType("int");

                    b.Property<int>("IdTinh")
                        .HasColumnType("int");

                    b.Property<int>("IdXa")
                        .HasColumnType("int");

                    b.Property<int>("Job")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int>("TotalCertificateCount")
                        .HasMaxLength(10)
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("IdHuyen");

                    b.HasIndex("IdTinh");

                    b.HasIndex("IdXa");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.EmployeeCertificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CertificateId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("IssueDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeCertificates", (string)null);
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Huyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdTinh")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdTinh");

                    b.HasIndex("PostalCode")
                        .IsUnique();

                    b.ToTable("Huyen", (string)null);
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Tinh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("PostalCode")
                        .IsUnique();

                    b.ToTable("Tinh", (string)null);
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Xa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdHuyen")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasMaxLength(100)
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("IdHuyen");

                    b.HasIndex("PostalCode")
                        .IsUnique();

                    b.ToTable("Xa", (string)null);
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Certificate", b =>
                {
                    b.HasOne("Hoangnhhe171693.Models.Tinh", "Tinh")
                        .WithMany("Certificates")
                        .HasForeignKey("IdTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tinh");
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Employee", b =>
                {
                    b.HasOne("Hoangnhhe171693.Models.Huyen", "Huyen")
                        .WithMany("Employees")
                        .HasForeignKey("IdHuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoangnhhe171693.Models.Tinh", "Tinh")
                        .WithMany("Employees")
                        .HasForeignKey("IdTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoangnhhe171693.Models.Xa", "Xa")
                        .WithMany("Employees")
                        .HasForeignKey("IdXa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Huyen");

                    b.Navigation("Tinh");

                    b.Navigation("Xa");
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.EmployeeCertificate", b =>
                {
                    b.HasOne("Hoangnhhe171693.Models.Certificate", "Certificate")
                        .WithMany("EmployeeCertificates")
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hoangnhhe171693.Models.Employee", "Employee")
                        .WithMany("EmployeeCertificates")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Huyen", b =>
                {
                    b.HasOne("Hoangnhhe171693.Models.Tinh", "Tinh")
                        .WithMany("Huyens")
                        .HasForeignKey("IdTinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tinh");
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Xa", b =>
                {
                    b.HasOne("Hoangnhhe171693.Models.Huyen", "Huyen")
                        .WithMany("Xas")
                        .HasForeignKey("IdHuyen")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Huyen");
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Certificate", b =>
                {
                    b.Navigation("EmployeeCertificates");
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Employee", b =>
                {
                    b.Navigation("EmployeeCertificates");
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Huyen", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Xas");
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Tinh", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("Employees");

                    b.Navigation("Huyens");
                });

            modelBuilder.Entity("Hoangnhhe171693.Models.Xa", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
